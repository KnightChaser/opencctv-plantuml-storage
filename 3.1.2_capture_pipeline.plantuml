@startuml
'== Capture & Circular Buffer Domain Model ==

class VideoCaptureDevice {
    +UUID id
    +String driverType  <<libcamera or ffmpeg>>
    +String resolution  <<ex: 1080p@30fps>>
    +Boolean isActive
}

class Encoder {
    +String codec  <<H.264>>
    +int bitrate
    +int gopSize
}

class VideoSegment {
    +UUID id
    +DateTime startTime
    +DateTime endTime
    +int sizeInMB
}

class CircularBuffer {
    +int maxSizeInMB
    +int currentUsage
    +String storagePath
}

class StoragePolicy {
    +String policyType  <<LRU, TTL>>
    +int maxRetentionHours
}

class CaptureError {
    +UUID id
    +String errorType  <<e.g. DiskWriteError>>
    +int retryCount
    +DateTime lastOccurred
}

' Device strongly owns its encoder (destroy device â†’ encoder gone)
VideoCaptureDevice "1" *-- "1" Encoder           : uses

' Encoder merely produces segments (loose association)
Encoder "1" -- "*" VideoSegment                 : encodes

' Buffer strongly owns segments it holds (overwrites/delete on eviction)
CircularBuffer "1" *-- "*" VideoSegment         : storedSegments >

' Buffer aggregates a policy (policy exists or can be reused elsewhere)
CircularBuffer "1" o-- "1" StoragePolicy        : managedBy

' Buffer strongly owns its error records (tied to buffer lifecycle)
CircularBuffer "1" *-- "*" CaptureError         : records
@enduml
